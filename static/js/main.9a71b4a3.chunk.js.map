{"version":3,"sources":["API/youtube.js","icons/sprite.svg","components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["axios","create","baseURL","params","part","type","key","SearchBar","state","input","onFormSubmit","e","preventDefault","length","props","className","Form","onSubmit","this","Control","placeholder","value","onChange","setState","target","Button","variant","xlinkHref","svg","Alert","React","Component","VideoItem","video","onVideoSelect","date","Date","snippet","publishedAt","convertedDate","getFullYear","getMonth","padStart","getDate","onClick","src","thumbnails","medium","url","alt","title","channelTitle","VideoList","videos","renderedList","map","id","videoId","VideoDetail","Spinner","animation","ResponsiveEmbed","aspectRatio","description","App","selectedVideo","pageToken","search","onInputSubmit","a","youtube","get","q","maxResults","catch","err","response","console","error","status","request","message","data","items","nextPageToken","loadVideos","Container","dataLength","next","hasMore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9a71b4a3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyCUga9zn-ATQv2iJ-gYeiR0bpWowqBS-fc';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://www.googleapis.com/youtube/v3',\r\n  params: {\r\n    part: 'snippet',\r\n    type: 'video',\r\n    key: KEY,\r\n  },\r\n});\r\n","export default __webpack_public_path__ + \"static/media/sprite.0eaa72c4.svg\";","import React from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport svg from '../icons/sprite.svg';\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { input: '' };\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.input.length < 20) this.props.onFormSubmit(this.state.input);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-75\">\r\n        <Form onSubmit={this.onFormSubmit} className=\"d-flex w-100 my-3\">\r\n          <Form.Control\r\n            className=\"rounded-0 header__input\"\r\n            placeholder=\"Search for a videos...\"\r\n            type=\"text\"\r\n            value={this.state.input}\r\n            onChange={e => this.setState({ input: e.target.value })}\r\n          ></Form.Control>\r\n          <Button variant=\"dark\" className=\"rounded-0\" type=\"submit\">\r\n            <svg className=\"header__icon\">\r\n              <use xlinkHref={`${svg}#icon-magnifying-glass`} />\r\n            </svg>\r\n          </Button>\r\n        </Form>\r\n        {this.state.input.length > 20 && (\r\n          <Alert variant=\"danger\" className=\"h5\">\r\n            Input is longer than 20 characters.\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  const date = new Date(video.snippet.publishedAt);\r\n  const convertedDate =\r\n    date.getFullYear() +\r\n    '-' +\r\n    `${date.getMonth() + 1}`.padStart(2, 0) +\r\n    '-' +\r\n    `${date.getDate()}`.padStart(2, 0);\r\n\r\n  return (\r\n    <ul onClick={() => onVideoSelect(video)}>\r\n      <li>\r\n        <img\r\n          className=\"w-100\"\r\n          src={video.snippet.thumbnails.medium.url}\r\n          alt={video.snippet.title}\r\n        />\r\n        <h3 className=\"pt-2 font-weight-bolder\">{video.snippet.title}</h3>\r\n        <div className=\"d-flex\">\r\n          <span>{video.snippet.channelTitle}</span>\r\n          <span className=\"ml-auto\">{convertedDate}</span>\r\n        </div>\r\n        <hr></hr>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const renderedList = videos.map(video => {\r\n    return (\r\n      <VideoItem\r\n        key={video.id.videoId}\r\n        onVideoSelect={onVideoSelect}\r\n        video={video}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"p-2\">{renderedList}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import React from 'react';\r\nimport { ResponsiveEmbed, Spinner } from 'react-bootstrap';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  if (!video) return <Spinner animation=\"border\" className=\"my-3\" />;\r\n\r\n  const date = new Date(video.snippet.publishedAt);\r\n  const convertedDate =\r\n    date.getFullYear() +\r\n    '-' +\r\n    `${date.getMonth() + 1}`.padStart(2, 0) +\r\n    '-' +\r\n    `${date.getDate()}`.padStart(2, 0);\r\n\r\n  return (\r\n    <div className=\"details p-2\">\r\n      <ResponsiveEmbed aspectRatio=\"16by9\">\r\n        <iframe\r\n          title=\"video player\"\r\n          src={`https://www.youtube.com/embed/${video.id.videoId}`}\r\n        />\r\n      </ResponsiveEmbed>\r\n      <div>\r\n        <h1 className=\"font-weight-bold my-3\">{video.snippet.title}</h1>\r\n        <hr></hr>\r\n        <div className=\"d-flex my-2 font-weight-bolder\">\r\n          <h3>{video.snippet.channelTitle}</h3>\r\n          <span className=\"ml-auto\">{convertedDate}</span>\r\n        </div>\r\n\r\n        <p className=\"\">{video.snippet.description}</p>\r\n        <hr></hr>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport youtube from '../API/youtube';\r\nimport SearchBar from './SearchBar';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport '../styles.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    videos: [],\r\n    selectedVideo: null,\r\n    pageToken: '',\r\n    search: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.onInputSubmit(\"the blancos we're tired\");\r\n  }\r\n\r\n  onInputSubmit = async input => {\r\n    const response = await youtube\r\n      .get('/search', {\r\n        params: {\r\n          q: input,\r\n          maxResults: 7,\r\n        },\r\n      })\r\n      .catch(err => {\r\n        //err > 500 ? server side : user\r\n        err.response\r\n          ? console.error(`Server responded with status ${err.response.status}`)\r\n          : err.request\r\n          ? console.error(`Can't get response ${err.request}`)\r\n          : console.error(\r\n              `Something happened in setting up the request ${err.message}`\r\n            );\r\n      });\r\n\r\n    this.setState({\r\n      videos: response.data.items,\r\n      selectedVideo: response.data.items[0],\r\n      pageToken: response.data.nextPageToken,\r\n      search: input,\r\n    });\r\n  };\r\n\r\n  onVideoSelect = video => {\r\n    this.setState({ selectedVideo: video });\r\n  };\r\n\r\n  loadVideos = async () => {\r\n    const { pageToken, search } = this.state;\r\n\r\n    const response = await youtube\r\n      .get('/search', {\r\n        params: {\r\n          q: search,\r\n          pageToken: pageToken,\r\n          maxResults: 7,\r\n        },\r\n      })\r\n      .catch(err => {\r\n        err.response\r\n          ? console.error(`Server responded with status ${err.response.status}`)\r\n          : err.request\r\n          ? console.error(`Can't get response ${err.request}`)\r\n          : console.error(\r\n              `Something happened in setting up the request ${err.message}`\r\n            );\r\n      });\r\n\r\n    this.setState({\r\n      pageToken: response.data.nextPageToken,\r\n      videos: [...this.state.videos, ...response.data.items],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"p-0\">\r\n        <header className=\"bg-white d-flex justify-content-center align-items-center header\">\r\n          <SearchBar onFormSubmit={this.onInputSubmit} />\r\n        </header>\r\n        <main className=\"bg-light d-md-flex\">\r\n          <div className=\"col-md-8 py-3\">\r\n            <VideoDetail video={this.state.selectedVideo} />\r\n          </div>\r\n          <div className=\"col-md-4 py-3\">\r\n            <InfiniteScroll\r\n              dataLength={this.state.videos.length}\r\n              next={this.loadVideos}\r\n              hasMore={true}\r\n            >\r\n              <VideoList\r\n                onVideoSelect={this.onVideoSelect}\r\n                videos={this.state.videos}\r\n              />\r\n            </InfiniteScroll>\r\n          </div>\r\n        </main>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}